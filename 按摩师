'''
一个有名的按摩师会收到源源不断的预约请求，每个预约都可以选择接或不接。在每次预约服务之间要有休息时间，因此她不能接受相邻的预约。给定一个预约请求序列，替按摩师找到最优的预约集合（总预约时间最长），返回总的分钟数。

注意：本题相对原题稍作改动

 

示例 1：

输入： [1,2,3,1]
输出： 4
解释： 选择 1 号预约和 3 号预约，总时长 = 1 + 3 = 4。


示例 2：

输入： [2,7,9,3,1]
输出： 12
解释： 选择 1 号预约、 3 号预约和 5 号预约，总时长 = 2 + 9 + 1 = 12。


示例 3：

输入： [2,1,4,5,3,1,1,3]
输出： 12
解释： 选择 1 号预约、 3 号预约、 5 号预约和 8 号预约，总时长 = 2 + 4 + 3 + 3 = 12。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/the-masseuse-lcci
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
'''
class Solution:
    def massage(self, nums: List[int]) -> int:
        if nums==[]:
            return 0
        if len(nums)<=2:
            return max(nums) 
        else:
            nums[2]=nums[0]+nums[2]
            for i in range(3,len(nums)):
                nums[i]=max(nums[i-2],nums[i-3])+nums[i]#状态转移方程
            return max(nums[-1],nums[-2])

#滚动数组 空间优化
class Solution:
    def massage(self, nums: List[int]) -> int:
        '''
        dp0 在状态i时不接活 累积到现在的干活时长 0代表不接
        dp1 在状态i时接活 累积到现在的干活时长 1代表接活
        如果i时不接活那i-1的z状态可以是接活或者不接活 去i-1时刻 dp0 dp1中大的
        而i接活 那么i-1就不能接活 只能i-1 不接活加上i的时长
        '''
        n=len(nums)
        if n==0:
            return 0
        else:
            dp0,dp1=0,nums[0]
            for i in range(1,n):
                tdp0=max(dp0,dp1)
                tdp1=dp0+nums[i]
                dp0,dp1=tdp0,tdp1
            return max(dp0,dp1)
