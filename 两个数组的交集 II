'''
给定两个数组，编写一个函数来计算它们的交集。

 

示例 1：

输入：nums1 = [1,2,2,1], nums2 = [2,2]
输出：[2,2]


示例 2:

输入：nums1 = [4,9,5], nums2 = [9,4,9,8,4]
输出：[4,9]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/intersection-of-two-arrays-ii
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
'''
class Solution:
    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:
        '''
        # 循环+pop
        u=[]
        def get(li1,li2):
            for i in li1:
                if i in li2:
                    u.append(li2.pop(li2.index(i)))
        if len(nums1)<=len(nums2):
            get(nums1,nums2)
            return u
        else:
            get(nums2,nums1)
            return u
            '''
        '''
        #排序+快慢指针
        if len(nums1)>len(nums2):
            return self.intersect(nums2,nums1)
        u=[]
        nums1.sort()
        nums2.sort()
        i1=0
        i2=0
        while i1<=len(nums1)-1 and i2<=len(nums2)-1:
            if nums1[i1]<nums2[i2]:
                i1+=1
            elif nums1[i1]>nums2[i2]:
                i2+=1
            else:
                u.append(nums1[i1])
                i1+=1
                i2+=1
        return u
        '''
        #counter dict 哈希表 counter
        u=[]
        if len(nums1)>len(nums2):
            return self.intersect(nums2,nums1)
        m={}
        for i in nums1:
            if i not in m.keys():
                m[i]=1
            else:
                m[i]+=1
        for i in nums2:
            if i in m.keys():
                u.append(i)
                m[i]-=1
                if m[i]==0:
                    m.pop(i)
        return u
